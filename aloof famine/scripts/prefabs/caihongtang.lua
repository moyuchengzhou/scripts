-- ---
-- --- Generated by EmmyLua(https://github.com/EmmyLua)
-- --- Created by EDY.
-- --- DateTime: 2023/6/14 15:42
-- ---
-- -- 加载贴图，动画
-- local assets = {Asset("ANIM", "anim/caihongtang.zip"), Asset("IMAGE", "images/caihongtang.tex"), Asset("ATLAS", "images/caihongtang.xml")}


-- local function oneaten(inst, eater)
--     if eater.components.timer and eater:HasTag("player") then -- 判断是玩家
--         if eater.components.combat ~= nil then --这个buff需要攻击组件
--             eater.time_l_strengthenhancer = { replace_min = TUNING.SEG_TIME*64 }
--             eater.components.debuffable:AddDebuff("speedupbuff", "speedupbuff")
--             eater.components.talker:Say("营养又美味!!!!")		
--             end

--         -- if eater.components.freezable then
--         --      eater.components.freezable:AddColdness(10)
--         --      eater.components.talker:Say("草莓蓝莓混杂在一起让冰块更加清爽!!!")	
--         --  end
--     end
       
-- end
-- -- local function item_oneaten(inst, eater)
-- --     if eater.components.timer and eater:HasTag("player") then -- 判断是玩家
-- --         if eater.components.timer:TimerExists("dragoonheartattack_timer") then -- 判断定时是否存在，存在的话，就重置计时
-- --             eater.components.timer:SetTimeLeft("dragoonheartattack_timer", 1440)
-- --         else
-- --             eater.components.timer:StartTimer("dragoonheartattack_timer", 1440) --不存在就开启一个timer来计时
-- --             if eater.components.combat ~= nil then
-- --                 eater.components.combat.externaldamagemultipliers:SetModifier("dragoonheartattack", 10)--调整伤害倍率
-- --             end
-- --         end
-- --     end
-- -- end


-- -- AddPlayerPostInit(function(inst)
-- --     if not TheWorld.ismastersim then
-- --         return inst
-- --     end

-- --     if not inst.components.timer then
-- --         inst:AddComponent("timer")
-- --     end

-- --     -- 刚进游戏时，如果timer还没结束，再给设置一遍
-- --     inst:DoTaskInTime(0, function(inst)
-- --         if inst.components.timer:TimerExists("dragoonheartattack_timer") then
-- --             if inst.components.combat ~= nil then
-- --                 inst.components.combat.externaldamagemultipliers:SetModifier("dragoonheartattack", 1.2)
-- --             end
-- --         end
-- --     end)
-- --     -- 监听timerdone事件，定时结束时将增加的伤害给移除掉
-- --     inst:ListenForEvent("timerdone", function(inst, data)
-- --         if data.name == "dragoonheartattack_timer" then
-- --             if inst.components.combat ~= nil then
-- --                 inst.components.combat.externaldamagemultipliers:RemoveModifier("dragoonheartattack")
-- --             end
-- --         end
-- --     end)
-- -- end)



-- function fn()
--     local assetname = "caihongtang"

--     local inst = CreateEntity() -- 创建实体
--     inst.entity:AddTransform() -- 添加xyz形变对象
--     inst.entity:AddAnimState() -- 添加动画状态
--     inst.entity:AddNetwork() -- 添加这一行才能让所有客户端都能看到这个实体

--     MakeInventoryPhysics(inst)

--     inst.AnimState:SetBank(assetname) -- 地上动画
--     inst.AnimState:SetBuild(assetname) -- 材质包，就是anim里的zip包
--     inst.AnimState:PlayAnimation("idle") -- 默认播放哪个动画
--     inst:AddTag("preparedfood")  --可由烹饪得到的食物否则大厨无法食用
--     MakeInventoryFloatable(inst)
--     --------------------------------------------------------------------------
--     if not TheWorld.ismastersim then
--         return inst
--     end
--     --------------------------------------------------------------------------
--     inst:AddComponent("inspectable") -- 可检查组件
--     inst:AddComponent("inventoryitem") -- 物品组件

--     inst.components.inventoryitem.atlasname = "images/caihongtang.xml" -- 在背包里的贴图

--     inst:AddComponent("edible") -- 可食物组件
--     inst.components.edible.foodtype = FOODTYPE.MEAT

--     inst:AddComponent("perishable") -- 可腐烂的组件
--     inst.components.perishable:SetPerishTime(TUNING.PERISH_SUPERSLOW)
--     inst.components.perishable:StartPerishing()
--     inst.components.perishable.onperishreplacement = "spoiled_food" -- 腐烂后变成腐烂食物

--     inst.components.edible.hungervalue = 30
--     inst.components.edible.healthvalue = 30
--     inst.components.edible.sanityvalue = 30
--     inst.components.edible:SetOnEatenFn(oneaten)--吃的时候调用buff效果
--     inst.components.edible:SetOnEatenFn(item_oneaten)
--     inst:AddComponent("stackable") -- 可堆叠
--     inst.components.stackable.maxsize = TUNING.STACK_SIZE_SMALLITEM

--     MakeHauntableLaunch(inst)

--     return inst
-- end

-- return Prefab("caihongtang", fn, assets, prefabs)